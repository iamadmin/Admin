/*
 * main.cpp
 *
 *  Created on: 2010-1-7
 *      Author: tomzhou
 */

#include <iostream>
#include <string>
#include "util/FileUtil.h"
#include "util/StringUtil.h"
#include "util/LogUtil.h"
#include "util/SysUtil.h"
#include "Setting.h"
#include <fstream>
#include <sys/types.h>
#include <unistd.h>

#define VERSION "1.0"

using namespace std;
using namespace util;


int main(int argc, char* argv[]) {

	//Global config object
	Setting setting;
	//可执行文件起始路径
	string startPath=FileUtil::getExePath();
	string configFile="";

	//处理输入参数
	if (argc>1) {
		int opt;
		while ((opt = getopt(argc, argv, "hf:c:")) != -1) {
			switch (opt) {
			case '?':
			case 'h':
				cout << endl;
				cout << "sysagentd v" << VERSION << "      Build on " << __DATE__ << endl;
				cout << "Author: tomzhou     admin.net@163.com" << endl;
				cout << "Usage: sysagentd [options]" << endl;
				cout << "  -h               Print help information." << endl;
				cout << "  -c configFile    Use this config file." << endl;
				cout << endl;
				return 0;
				break;
			case 'f':
			case 'c':
				configFile=optarg;
				break;
			}
		}

	}

	//默认使用./etc/agentd.conf配置文件
	if (configFile=="") {
		configFile=startPath+"/etc/agentd.conf";
	}

	if (!setting.loadConfigFile(configFile)) {
		return -1;
	}

	if (!SysUtil::getDaemon()) {
		cerr << "Can't change to daemon, exit." << endl;
		return -1;
	}

	//初始化log对象
	LogUtil log;
	log.setFileName("agentd_");
	log.setBasePath(setting.getLogPath());
	log.setLogLevel(setting.getLogLevel());
	log.setRotateInterval(setting.getLogRotate());

	log.Write(LogUtil::DEBUG,"Agent is starting....");
	log.Write(LogUtil::DEBUG,"Server IP:"+setting.getServerIp());
	log.Write(LogUtil::DEBUG,"Server Port:"+ StringUtil::FromInt(setting.getServerPort()));

	log.Write(LogUtil::DEBUG,"Local IP:"+setting.getLocalIp());
	log.Write(LogUtil::DEBUG,"Local Port:"+StringUtil::FromInt(setting.getLocalPort()));


	log.Write(LogUtil::DEBUG,"Current Directory:"+FileUtil::getWorkDir());


	for (int i=0;i<60;i++) {
		sleep(1);
		log.Write(LogUtil::DEBUG,"In daemon.....");
	}

	log.Write(LogUtil::DEBUG,"Saving config file.");
	setting.saveConfigFile();

	log.Write(LogUtil::DEBUG,"Shutdown.");


	return 0;
}
